// <auto-generated />
using System;
using KintelaData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KintelaData.Migrations
{
    [DbContext(typeof(KintelaContext))]
    [Migration("20240328200026_Crear_Tablas_Grupos_y_Discos_y_Seed_Grupos")]
    partial class Crear_Tablas_Grupos_y_Discos_y_Seed_Grupos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoriaReceta", b =>
                {
                    b.Property<int>("CategoriasId")
                        .HasColumnType("int");

                    b.Property<int>("RecetasId")
                        .HasColumnType("int");

                    b.HasKey("CategoriasId", "RecetasId");

                    b.HasIndex("RecetasId");

                    b.ToTable("CategoriaReceta");
                });

            modelBuilder.Entity("KintelaDomain.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Carne"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Ensalada"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Huevos"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Legumbres"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Pasta"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Patatas"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Pescado"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Postre"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Sandwich"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Sopa"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Tortilla"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Verdura"
                        });
                });

            modelBuilder.Entity("KintelaDomain.Disco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Caratula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discografica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Productor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearPublicacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.ToTable("Discos");
                });

            modelBuilder.Entity("KintelaDomain.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Grupos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "The Beatles"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "The Rolling Stones"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Tom Petty & The Heart Breakers"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Tom Petty"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Traveling Wilburys"
                        });
                });

            modelBuilder.Entity("KintelaDomain.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("KintelaDomain.Receta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Comensales")
                        .HasColumnType("int");

                    b.Property<string>("Ingredientes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Preparacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Presentacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("enlaceVideo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recetas");
                });

            modelBuilder.Entity("MenuReceta", b =>
                {
                    b.Property<int>("MenusId")
                        .HasColumnType("int");

                    b.Property<int>("RecetasId")
                        .HasColumnType("int");

                    b.HasKey("MenusId", "RecetasId");

                    b.HasIndex("RecetasId");

                    b.ToTable("MenuReceta");
                });

            modelBuilder.Entity("CategoriaReceta", b =>
                {
                    b.HasOne("KintelaDomain.Categoria", null)
                        .WithMany()
                        .HasForeignKey("CategoriasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KintelaDomain.Receta", null)
                        .WithMany()
                        .HasForeignKey("RecetasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KintelaDomain.Disco", b =>
                {
                    b.HasOne("KintelaDomain.Grupo", "Grupo")
                        .WithMany("Discos")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("MenuReceta", b =>
                {
                    b.HasOne("KintelaDomain.Menu", null)
                        .WithMany()
                        .HasForeignKey("MenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KintelaDomain.Receta", null)
                        .WithMany()
                        .HasForeignKey("RecetasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KintelaDomain.Grupo", b =>
                {
                    b.Navigation("Discos");
                });
#pragma warning restore 612, 618
        }
    }
}
